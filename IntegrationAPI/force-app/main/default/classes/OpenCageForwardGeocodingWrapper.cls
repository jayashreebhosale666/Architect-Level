//
//Generated by Jayashree Bhosale
//
public with sharing class OpenCageForwardGeocodingWrapper {
	public results[] results;
	public status status;
	public Integer total_results;	//2
	public class results {
		public annotations annotations;
		public bounds bounds;
		public components components;
		public Integer confidence;	//9
		public String formatted;	//Goethe-Nationalmuseum, Frauenplan 1, 99423 Weimar, Germany
		public geometry geometry;
	}
	public class annotations {
		public DMS DMS;
		public String MGRS;	//32UPB6346249905
		public String Maidenhead;	//JO50px94ko
		public Mercator Mercator;
		public NUTS NUTS;
		public OSM OSM;
		public UN_M49 UN_M49;
		public Integer callingcode;	//49
		//public currency currency;
		public String flag;	//ðŸ‡©ðŸ‡ª
		public String geohash;	//u3041b1jw0trrfc4svjg
		public Double qibla;	//132.4
		public roadinfo roadinfo;
		public sun sun;
		public timezone timezone;
		public what3words what3words;
		public String wikidata;	//Q882721
	}
	public class DMS {
		public String lat;	//50Â° 58' 39.03816'' N
		public String lng;	//11Â° 19' 42.75264'' E
	}
	public class Mercator {
		public Double x;	//1261087.577
		public Double y;	//6584100.003
	}
	public class NUTS {
		public NUTS0 NUTS0;
		public NUTS1 NUTS1;
		public NUTS2 NUTS2;
		public NUTS3 NUTS3;
	}
	public class NUTS0 {
		public String code;	//DE
	}
	public class NUTS1 {
		public String code;	//DEG
	}
	public class NUTS2 {
		public String code;	//DEG0
	}
	public class NUTS3 {
		public String code;	//DEG05
	}
	public class OSM {
		public String edit_url;	//https://www.openstreetmap.org/edit?relation=3145143#map=17/50.97751/11.32854
		public String note_url;	//https://www.openstreetmap.org/note/new#map=17/50.97751/11.32854&layers=N
		public String url;	//https://www.openstreetmap.org/?mlat=50.97751&mlon=11.32854#map=17/50.97751/11.32854
	}
	public class UN_M49 {
		public regions regions;
	}
	public class regions {
		public String DE;	//276
		public String EUROPE;	//150
		public String WESTERN_EUROPE;	//155
		public String WORLD;	//001
	}
	public class alternate_symbols {
	}
	public class roadinfo {
		public String drive_on;	//right
		public String road;	//Frauenplan
		public String speed_in;	//km/h
	}
	public class sun {
		public rise rise;
		public sunset sunset;
	}
	public class rise {
		public Integer apparent;	//1722570240
		public Integer astronomical;	//1722560520
		public Integer civil;	//1722567840
		public Integer nautical;	//1722564720
	}
	public class sunset {
		public Integer apparent;	//1722625020
		public Integer astronomical;	//1722634620
		public Integer civil;	//1722627360
		public Integer nautical;	//1722630480
	}
	public class timezone {
		public String name;	//Europe/Berlin
		public Integer now_in_dst;	//1
		public Integer offset_sec;	//7200
		public String offset_string;	//+0200
		public String short_name;	//CEST
	}
	public class what3words {
		public String words;	//rock.broker.partied
	}
	public class bounds {
		public northeast northeast;
		public southwest southwest;
	}
	public class northeast {
		public Double lat;	//50.9776496
		public Double lng;	//11.328959
	}
	public class southwest {
		public Double lat;	//50.9773708
		public Double lng;	//11.3284125
	}
	public class components {
		public String category;	//outdoors/recreation
		public String normalized_city;	//Weimar
		public String type;	//museum
		public String continent;	//Europe
		public String country;	//Germany
		public String country_code;	//de
		public String house_number;	//1
		public String museum;	//Goethe-Nationalmuseum
		public String political_union;	//European Union
		public String postcode;	//99423
		public String road;	//Frauenplan
		public String state;	//Thuringia
		public String state_code;	//TH
		public String suburb;	//Altstadt
		public String town;	//Weimar
	}
	public class geometry {
		public Double lat;	//50.9775106
		public Double lng;	//11.3285424
	}
	public class status {
		public Integer code;	//200
		public String message;	//OK
	}
	public static OpenCageForwardGeocodingWrapper parse(String json){
		return (OpenCageForwardGeocodingWrapper) System.JSON.deserialize(json, OpenCageForwardGeocodingWrapper.class);
	}
}